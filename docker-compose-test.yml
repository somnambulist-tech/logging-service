version: '3.2'

services:
  elasticsearch:
    build:
      context: src/Resources/docker/elasticsearch
      dockerfile: Dockerfile
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    build:
      context: src/Resources/docker/logstash
      dockerfile: Dockerfile
      args:
        ELK_VERSION: $ELK_VERSION
    ports:
      - "5044:5044"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: src/Resources/docker/kibana
      dockerfile: Dockerfile
      args:
        ELK_VERSION: $ELK_VERSION
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  filebeat:
    build:
      context: src/Resources/docker/filebeat
      dockerfile: Dockerfile
    environment:
      ELASTIC_USERNAME: elastic
      ELASTIC_PASSWORD: changeme
    volumes:
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    networks:
      - elk

  testLoggerAlpha:
    image: chentex/random-logger:latest
    command: 500 2500

  testLoggerBeta:
    image: chentex/random-logger:latest
    command: 500 2500

  testLoggerGamma:
    image: chentex/random-logger:latest
    command: 500 2500

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
